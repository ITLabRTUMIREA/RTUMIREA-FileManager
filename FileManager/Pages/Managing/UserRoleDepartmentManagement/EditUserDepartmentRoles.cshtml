@page "{userid?}"
@model FileManager.Pages.Managing.UserRoleDepartmentManagement.EditUserDepartmentRolesModel
@using FileManager.Models.Database.UserDepartmentRoles;
@using FileManager.Models.Database.DepartmentsDocuments;
@inject FileManager.Services.GetAccountDataService.IGetAccountDataService _getAccountDataService;
@{
    ViewData["Title"] = "Edit User Department Roles";
}
<h2>Cписок существующих прав пользователя @Model.EditUserDepartmentRolesViewModel.UserEmail</h2>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Название кафедры</th>
            <th>Имеющиеся роли</th>
        </tr>
    </thead>
    <tbody>
        @foreach (IGrouping<string, UserDepartmentRole> userDepartmentRole in Model.allUserDepartmentRoles)
        {

            <tr>
                <td>@userDepartmentRole.Key</td>

                <td>
                    @string.Join(", ", userDepartmentRole.Select(udr => udr.Role.Name).ToArray<string>());
                </td>

            </tr>

        }
        @if (Model.allUserDepartmentRoles.Count == 0)
        {
            <tr>
                <td>Нет кафедр</td>
                <td>Нет ролей на кафедрах</td>
            </tr>
        }
    </tbody>
</table>


<form method="post" asp-page-handler="UpdateRoles">
    <input type="hidden" name="userId" value="@Model.EditUserDepartmentRolesViewModel.UserId" />

    <h2>Изменение прав доступа на кафедрах для пользователя @Model.EditUserDepartmentRolesViewModel.UserEmail</h2>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th scope="col">Название кафедры</th>

                @foreach (Role role in Model.EditUserDepartmentRolesViewModel.AllRoles)
                {
                    @if (Model.EditUserDepartmentRolesViewModel.UserDepartmentRoles.Exists(udr => udr.Role.Name == "Admin")
                  && role.Name == "Admin")
                    {
                        <th scope="col">@role.Name</th>
                    }
                    else if (Model.EditUserDepartmentRolesViewModel.UserDepartmentRoles.Exists(udr => udr.Role.Name == "Admin")
                        && role.Name != "Admin")
                    {
                        <th scope="col">@role.Name</th>
                    }
                    else if (Model.IsSystemAdmin)
                    {
                        <th scope="col">@role.Name</th>
                    }

                }
            </tr>
        </thead>

        <tbody>
            <tr>
                <td>
                    <select id="select-department" required name="departmentId" asp-for="@Model.EditUserDepartmentRolesViewModel.DepartmentId"
                            onchange="UpdateRoles(this.value)"
                            class="select-department" placeholder="Выберите кафедру">
                        <option disabled selected value="">Выберите кафедру</option>
                        @foreach (Department department in Model.EditUserDepartmentRolesViewModel.AllDepartments)
                        {
                            if (await _getAccountDataService.IsAdminOnDepartment(department.Id) || Model.IsSystemAdmin)
                            {
                                <option value="@department.Id">@department.Name</option>
                            }
                        }
                    </select>

                </td>

                @foreach (Role role in Model.EditUserDepartmentRolesViewModel.AllRoles)
                {
                    @if (Model.EditUserDepartmentRolesViewModel.UserDepartmentRoles.Exists(udr => udr.Role.Name == "Admin")
                      && role.Name == "Admin")
                    {
                        <td>
                            <input type="checkbox" name="roles" value="@role.Id"
                                   @(Model.EditUserDepartmentRolesViewModel.UserDepartmentRoles.Select(urd => urd.Role.Id.ToString().ToLower()).Contains(role.Id.ToString()) ? "checked=\"checked\"" : "") />
                        </td>
                    }
                    else if (Model.EditUserDepartmentRolesViewModel.UserDepartmentRoles.Exists(udr => udr.Role.Name == "Admin")
                         && role.Name != "Admin")
                    {
                        <td>
                            <input type="checkbox" name="roles" value="@role.Id"
                                   @(Model.EditUserDepartmentRolesViewModel.UserDepartmentRoles.Select(urd => urd.Role.Id.ToString().ToLower()).Contains(role.Id.ToString()) ? "checked=\"checked\"" : "") />
                        </td>
                    }
                    else if (Model.IsSystemAdmin)
                    {
                        <td>
                            <input type="checkbox" name="roles" value="@role.Id"
                                   @(Model.EditUserDepartmentRolesViewModel.UserDepartmentRoles.Select(urd => urd.Role.Id.ToString().ToLower()).Contains(role.Id.ToString()) ? "checked=\"checked\"" : "") />
                        </td>
                    }
                }
            </tr>
        </tbody>
    </table>

    <a class="btn btn-link" asp-page="UserDepartmentList">Отменить изменения</a>
    <button type="submit" class="btn btn-primary">Сохранить изменения</button>

</form>
@section Scripts{
    <script type="text/javascript">
        $(function () {
            $('.select-department').selectize({
                create: true,
                sortField: {
                    field: 'text',
                    direction: 'asc'
                },
                dropdownParent: 'body'
            });
        });

        function UpdateRoles(departmentId) {
            console.log(departmentId);

            var userid = new URL(window.location.href).searchParams.get("userid");

            var newPage = window.location.origin + window.location.pathname + '?handler=GetRoles&userid=' + userid + '&departmentid=' + departmentId;
            window.location.replace(newPage)
        }</script>

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}